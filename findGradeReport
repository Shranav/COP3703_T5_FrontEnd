import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Label;

import java.sql.SQLException;

import org.eclipse.swt.SWT;
import org.eclipse.wb.swt.SWTResourceManager;
import org.eclipse.swt.widgets.Text;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;

public class findGradeReport {

	protected Shell shell;
	private Text txtNnum;
	private Text txtGradeReport;

	/**
	 * Launch the application.
	 * @param args
	 */
	public static void main(String[] args) {
		try {
			findGradeReport window = new findGradeReport();
			window.open();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Open the window.
	 */
	public void open() {
		Display display = Display.getDefault();
		createContents();
		shell.open();
		shell.layout();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) {
				display.sleep();
			}
		}
	}
	
	public static void openGradeReport() {
		
		try {
			findGradeReport window = new findGradeReport();
			window.open();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create contents of the window.
	 */
	protected void createContents() {
		shell = new Shell();
		shell.setSize(600, 450);
		shell.setText("SWT Application");
		
		Label lblGradeReport = new Label(shell, SWT.NONE);
		lblGradeReport.setAlignment(SWT.CENTER);
		lblGradeReport.setFont(SWTResourceManager.getFont("Segoe UI", 14, SWT.BOLD));
		lblGradeReport.setBounds(35, 10, 516, 25);
		lblGradeReport.setText("Grade Report");
		
		Label lblNewLabel = new Label(shell, SWT.NONE);
		lblNewLabel.setBounds(145, 47, 129, 15);
		lblNewLabel.setText("Enter Student's Number:");
		
		txtNnum = new Text(shell, SWT.BORDER);
		txtNnum.setBounds(326, 44, 87, 21);
		
		txtGradeReport = new Text(shell, SWT.BORDER | SWT.READ_ONLY | SWT.V_SCROLL);
		txtGradeReport.setBounds(35, 77, 516, 280);
		
		Button btnSearch = new Button(shell, SWT.NONE);
		btnSearch.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				String nNum = txtNnum.getText();
				
				if(nNum.matches("^[Nn][0-9]{8}$")) {
					
					//make sql call
					jdbcHandler sqlconn = new jdbcHandler(loginScreen.username, loginScreen.password);
					try {
						String result = sqlconn.genGradeReport(nNum);
						String result2 = sqlconn.avgGPA(nNum);
						txtGradeReport.setText(result + result2);
						txtNnum.setText("");
					} catch (SQLException e1) {
						e1.printStackTrace();
						enrollStudent.createMsgBox(shell, "Error", "There was an error with the search. Hint: " + e1.getLocalizedMessage() + ".  Please try again.");
					}

				} else {
					enrollStudent.createMsgBox(shell, "Incorrect Student nNumber", "The Student nNumber you've entered does not seem to be in the correct format. Please fix this.");
				}
			}
		});
		btnSearch.setBounds(504, 375, 75, 25);
		btnSearch.setText("Search");
		
		Button btnBack = new Button(shell, SWT.NONE);
		btnBack.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				// Back to menu and close current screen.
				shell.close();
				menuScreen.openMenu();
			}
		});
		btnBack.setBounds(10, 375, 75, 25);
		btnBack.setText("Back");

	}
}
